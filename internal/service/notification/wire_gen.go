// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package notification

import (
	"gitee.com/flycash/notification-platform/internal/service/notification/internal/repository"
	"gitee.com/flycash/notification-platform/internal/service/notification/internal/repository/dao"
	"gitee.com/flycash/notification-platform/internal/service/notification/internal/service"
	"github.com/ego-component/egorm"
	"github.com/google/wire"
	"github.com/sony/sonyflake"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(db *gorm.DB, idGenerator *sonyflake.Sonyflake) Module {
	error2 := initTables(db)
	notificationDAO := dao.NewNotificationDAO(db)
	notificationRepository := repository.NewNotificationRepository(notificationDAO)
	notificationService := service.NewNotificationService(notificationRepository, idGenerator)
	module := Module{
		ignoredInitTablesErr: error2,
		Svc:                  notificationService,
	}
	return module
}

// wire.go:

var notificationServiceProviderSet = wire.NewSet(dao.NewNotificationDAO, repository.NewNotificationRepository, service.NewNotificationService)

func initTables(db *egorm.Component) error {
	return dao.InitTables(db)
}
