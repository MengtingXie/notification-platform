// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package txnotification

import (
	"gitee.com/flycash/notification-platform/internal/service/config"
	"gitee.com/flycash/notification-platform/internal/service/notification"
	"gitee.com/flycash/notification-platform/internal/service/tx_notification/internal/repository"
	"gitee.com/flycash/notification-platform/internal/service/tx_notification/internal/repository/dao"
	"github.com/ego-component/egorm"
	"github.com/redis/go-redis/v9"
)

// Injectors from wire.go:

func InitModule(db *egorm.Component, cache redis.Cmdable, notificationModule notification.Service, configModule config.Service) *Module {
	error2 := initTables(db)
	txNotificationDAO := dao.NewTxNotificationDAO(db)
	txNotificationRepository := repository.NewTxNotificationRepository(txNotificationDAO)
	builder := InitRetryServiceBuilder()
	client := InitDlickClient(cache)
	v := InitService(txNotificationRepository, notificationModule, configModule, builder, client)
	module := &Module{
		ignoredInitTablesErr: error2,
		Svc:                  v,
	}
	return module
}

// wire.go:

func initTables(db *egorm.Component) error {
	return dao.InitTables(db)
}
