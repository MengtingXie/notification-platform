// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package template

import (
	"gitee.com/flycash/notification-platform/internal/repository"
	dao2 "gitee.com/flycash/notification-platform/internal/repository/dao"
	"gitee.com/flycash/notification-platform/internal/service/audit"
	"gitee.com/flycash/notification-platform/internal/service/backup/internal/template/internal/repository/dao"
	"gitee.com/flycash/notification-platform/internal/service/provider"
	template2 "gitee.com/flycash/notification-platform/internal/service/template"
	"github.com/ego-component/egorm"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitModule(db *egorm.Component, providerSvc provider.Service, auditsvc audit.Service) Module {
	error2 := initTables(db)
	channelTemplateDAO := dao2.NewChannelTemplateDAO(db)
	channelTemplateRepository := repository.NewChannelTemplateRepository(channelTemplateDAO)
	channelTemplateService := template2.NewChannelTemplateService(channelTemplateRepository, providerSvc, auditsvc)
	templateService := convert(channelTemplateService)
	module := Module{
		ignoredInitTablesErr: error2,
		Svc:                  templateService,
	}
	return module
}

// wire.go:

var ProviderSet = wire.NewSet(dao2.NewChannelTemplateDAO, repository.NewChannelTemplateRepository, template2.NewChannelTemplateService)

func convert(svc template2.ChannelTemplateService) Service {
	return svc.(Service)
}

func initTables(db *egorm.Component) error {
	return dao.InitTables(db)
}
