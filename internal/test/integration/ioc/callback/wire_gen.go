// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package callback

import (
	"gitee.com/flycash/notification-platform/internal/repository"
	"gitee.com/flycash/notification-platform/internal/repository/dao"
	"gitee.com/flycash/notification-platform/internal/service/config"
	"gitee.com/flycash/notification-platform/internal/service/notification/callback"
	"gitee.com/flycash/notification-platform/internal/test/ioc"
)

// Injectors from wire.go:

func Init(cnfigSvc config.BusinessConfigService) *Service {
	db := ioc.InitDBAndTables()
	notificationDAO := dao.NewNotificationDAO(db)
	notificationRepository := repository.NewNotificationRepository(notificationDAO)
	callbackLogDAO := dao.NewCallbackLogDAO(db)
	callbackLogRepository := repository.NewCallbackLogRepository(notificationRepository, callbackLogDAO)
	service := callback.NewService(cnfigSvc, callbackLogRepository)
	quotaDAO := dao.NewQuotaDAO(db)
	quotaRepository := repository.NewQuotaRepository(quotaDAO)
	callbackService := &Service{
		Svc:              service,
		Repo:             callbackLogRepository,
		NotificationRepo: notificationRepository,
		QuotaRepo:        quotaRepository,
	}
	return callbackService
}

// wire.go:

type Service struct {
	Svc              callback.Service
	Repo             repository.CallbackLogRepository
	NotificationRepo repository.NotificationRepository
	QuotaRepo        repository.QuotaRepository
}
