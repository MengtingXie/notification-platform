// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package notification

import (
	"gitee.com/flycash/notification-platform/internal/repository"
	"gitee.com/flycash/notification-platform/internal/repository/dao"
	"gitee.com/flycash/notification-platform/internal/service/notification"
	"gitee.com/flycash/notification-platform/internal/test/ioc"
)

// Injectors from wire.go:

func Init() *Service {
	db := ioc.InitDBAndTables()
	notificationDAO := dao.NewNotificationDAO(db)
	notificationRepository := repository.NewNotificationRepository(notificationDAO)
	sonyflake := ioc.InitIDGenerator()
	service := notification.NewNotificationService(notificationRepository, sonyflake)
	quotaDAO := dao.NewQuotaDAO(db)
	quotaRepository := repository.NewQuotaRepository(quotaDAO)
	notificationService := &Service{
		Svc:       service,
		Repo:      notificationRepository,
		QuotaRepo: quotaRepository,
	}
	return notificationService
}

// wire.go:

type Service struct {
	Svc       notification.Service
	Repo      repository.NotificationRepository
	QuotaRepo repository.QuotaRepository
}
