// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package tx_notification

import (
	"gitee.com/flycash/notification-platform/internal/repository"
	"gitee.com/flycash/notification-platform/internal/repository/dao"
	"gitee.com/flycash/notification-platform/internal/service/config"
	"gitee.com/flycash/notification-platform/internal/service/notification"
	"gitee.com/flycash/notification-platform/internal/test/ioc"
	"github.com/meoying/dlock-go"
	redis2 "github.com/meoying/dlock-go/redis"
	"github.com/redis/go-redis/v9"
)

// Injectors from wire.go:

func InitTxNotificationService(configSvc config.BusinessConfigService) *notification.txNotificationService {
	v := ioc.InitDB()
	txNotificationDAO := dao.NewTxNotificationDAO(v)
	txNotificationRepository := repository.NewTxNotificationRepository(txNotificationDAO)
	cmdable := ioc.InitRedis()
	client := initRedisClient(cmdable)
	txNotificationServiceV1 := notification.NewTxNotificationService(txNotificationRepository, configSvc, client)
	return txNotificationServiceV1
}

// wire.go:

func initRedisClient(rdb redis.Cmdable) dlock.Client {
	return redis2.NewClient(rdb)
}
